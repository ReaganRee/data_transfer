pos_data <- pos_data_all[pos_data_all <= 0.5]
neg_data <- neg_data_all[neg_data_all <= 0.5]
set.seed(100)
d = c(pos_data)
d <- d[!is.na(d)]
out<-normalmixEM(d, epsilon=0.16, arbvar=TRUE, fast=TRUE)
library(plotmm)
library(patchwork)
library(EMCluster)
library(flexmix)
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = attention_score))
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")
print(out)
f <- function(x) dnorm(x, m=0.2185390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f))
f <- function(x) dnorm(x, m=0.2185390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.3161517, col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.3261517, col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.32, col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.323, col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.322, col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.3218, col = "#999999", lwd = 0.6, linetype="dashed")
f <- function(x) rnorm(x, m=0.2185390, sd=0.07763533) - rnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
f <- function(x) rnorm(x, m=0.2185390, sd=0.07763533) - rnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
View(f)
uniroot(f, interval=c(0.2, 0.5))
f <- function(x) dnorm(x, m=0.2185390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
f <- function(x) dnorm(x, m=0.2285390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
f <- function(x) dnorm(x, m=0.2285390, sd=0.07863533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
f <- function(x) dnorm(x, m=0.2290390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
f <- function(x) dnorm(x, m=0.2300390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
f <- function(x) dnorm(x, m=0.2500390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
f <- function(x) dnorm(x, m=0.24300390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
f <- function(x) dnorm(x, m=0.24100390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/m6a_skewing/data/window20_merged_no_overlap.csv", header=TRUE)
pos_data_all <- data[1:2129,3]
neg_data_all <- data[2130:1749908,3]
pos_data <- pos_data_all[pos_data_all <= 0.5]
neg_data <- neg_data_all[neg_data_all <= 0.5]
set.seed(100)
d = c(pos_data)
d <- d[!is.na(d)]
out<-normalmixEM(d, epsilon=0.16, arbvar=TRUE, fast=TRUE)
print(out)
f <- function(x) dnorm(x, m=0.2185390, sd=0.07763533) - dnorm(x, m=0.4034567, sd=0.06057512)
print(uniroot(f, interval=c(0.2, 0.5)))
library(AdaptGauss)
install.packages("AdaptGauss")
library(AdaptGauss)
library(AdaptGauss)
print(Intersect2Mixtures(0.2185390, 0.07763533, 0.5525921, 0.4034567, 0.06057512, 0.4474079))
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.3214796, col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.3214796, col = "green", lwd = 0.6, linetype="dashed")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_20_window.csv", header=TRUE)
View(data)
right_data_all <- data[1:622,2]
left_data_all <- data[622:1402,2]
#pos_data <- pos_data_all[pos_data_all <= 0.5]
#neg_data <- neg_data_all[neg_data_all <= 0.5]
#install.package(“ggplot2”)
#install.packages('mixtools')
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) +
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
mean(right_data_all,na.rm=TRUE)
mean(left_data_all,na.rm=TRUE)
ks.test(right_data_all, left_data_all, alternative="two.sided")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window.csv", header=TRUE)
View(data)
right_data_all <- data[1:622,2]
left_data_all <- data[622:1402,2]
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) +
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data_all, left_data_all, alternative="two.sided")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all.csv", header=TRUE)
View(data)
right_data_all <- data[1:3415,2]
left_data_all <- data[3416:4195,2]
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) +
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data_all, left_data_all, alternative="two.sided")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_20_window_all.csv", header=TRUE)
right_data_all <- data[1:3415,2]
left_data_all <- data[3416:4195,2]
#pos_data <- pos_data_all[pos_data_all <= 0.5]
#neg_data <- neg_data_all[neg_data_all <= 0.5]
#install.package(“ggplot2”)
#install.packages('mixtools')
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) +
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data_all, left_data_all, alternative="two.sided")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all.csv", header=TRUE)
right_data_all <- data[1:3415,2]
left_data_all <- data[3416:4195,2]
#pos_data <- pos_data_all[pos_data_all <= 0.5]
#neg_data <- neg_data_all[neg_data_all <= 0.5]
#install.package(“ggplot2”)
#install.packages('mixtools')
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) +
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data_all, left_data_all, alternative="two.sided")
p + geom_density(aes(color = left_or_right)) +
scale_color_manual(values=c("#999989", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = left_or_right)) +
scale_color_manual(values=c("#000000", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
mean(right_data_all,na.rm=TRUE)
mean(left_data_all,na.rm=TRUE)
p + geom_density(aes(color = left_or_right)) +
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data_all, left_data_all, alternative="two.sided")
p + geom_density(aes(color = left_or_right)) + xlim(-3,3)
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data_all, left_data_all, alternative="two.sided")
ks.test(right_data_all, left_data_all, alternative="less")
ks.test(right_data_all, left_data_all, alternative="greater")
ks.test(right_data_all, left_data_all, alternative="less")
pos_data <- right_data_all[-1 <= right_data_all <= 2]
pos_data <- right_data_all[right_data_all <= 2]
neg_data <- left_data_all[left_data_all <= 2]
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all.csv", header=TRUE)
right_data_all <- data[1:3415,2]
left_data_all <- data[3416:4195,2]
right_data <- right_data_all[right_data_all <= 2]
left_data <- left_data_all[left_data_all <= 2]
#install.package(“ggplot2”)
#install.packages('mixtools')
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data, left_data, alternative="less")
right_data <- right_data[right_data >= -1]
left_data <- left_data[left_data >= -1]
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data, left_data, alternative="less")
ks.test(right_data, left_data, alternative="two.sided")
ks.test(right_data, left_data, alternative="less")
ks.test(right_data, left_data, alternative="two.sided")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all.csv", header=TRUE)
right_data_all <- data[1:3415,2]
left_data_all <- data[3416:4195,2]
right_data <- right_data_all[right_data_all <= 2]
left_data <- left_data_all[left_data_all <= 2]
right_data <- right_data[right_data >= 0]
left_data <- left_data[left_data >= 0]
ks.test(right_data, left_data, alternative="two.sided")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all.csv", header=TRUE)
right_data_all <- data[1:3415,2]
left_data_all <- data[3416:4195,2]
right_data <- right_data_all[right_data_all <= 1]
left_data <- left_data_all[left_data_all <= 1]
right_data <- right_data[right_data >= 0]
left_data <- left_data[left_data >= 0]
ks.test(right_data, left_data, alternative="two.sided")
ks.test(right_data, left_data, alternative="less")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all.csv", header=TRUE)
right_data_all <- data[1:3415,2]
left_data_all <- data[3416:4195,2]
right_data <- right_data_all[right_data_all <= 2]
left_data <- left_data_all[left_data_all <= 2]
right_data <- right_data[right_data >= -1]
left_data <- left_data[left_data >= -1]
ks.test(right_data, left_data, alternative="less")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/m6a_skewing/data/window20_merged_no_overlap.csv", header=TRUE)
pos_data_all <- data[1:2129,3]
neg_data_all <- data[2130:1749908,3]
pos_data <- pos_data_all[pos_data_all <= 0.5]
neg_data <- neg_data_all[neg_data_all <= 0.5]
set.seed(100)
d = c(pos_data)
d <- d[!is.na(d)]
out<-normalmixEM(d, epsilon=0.16, arbvar=TRUE, fast=TRUE)
print(out)
library(plotmm)
library(patchwork)
library(EMCluster)
library(flexmix)
library(ggplot2)
library(tidyverse)
library(mixtools)
library(AdaptGauss)
theme_set(theme_classic())
p<-ggplot(data, aes(x = attention_score))
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.3214796, col = "green", lwd = 0.6, linetype="dashed")
print(out)
+
geom_vline(xintercept = 0.29613, col = "green", lwd = 0.6, linetype="dashed")
p + geom_density(aes(color = pos_or_neg)) + xlim(0,0.5)+ ylim(0,4) +
geom_vline(xintercept = mean(pos_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(neg_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("Negative", "Positive")) + theme(legend.position=c(0.1,0.9))+
labs(title="Attention Density Plot",x="Attention scores (10^(-2))", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here is the function
args = list(out$mu[1], out$sigma[1], lam = out$lambda[1]),
colour = "red", lwd = 0.5, linetype="dashed")+
stat_function(geom = "line", fun = plot_mix_comps_normal, # here again as k = 2
args = list(out$mu[2], out$sigma[2], lam = out$lambda[2]),
colour = "blue", lwd = 0.5, linetype="dashed")+
geom_vline(xintercept = 0.3214796, col = "green", lwd = 0.6, linetype="dashed") +
geom_vline(xintercept = 0.29613, col = "green", lwd = 0.6, linetype="dashed")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all_small_range.csv", header=TRUE)
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all_small_range.csv", header=TRUE)
View(data)
right_data_all <- data[1:2972,2]
left_data_all <- data[2973:3439,2]
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data, left_data, alternative="less")
ks.test(right_data_all, left_data_all, alternative="less")
ks.test(right_data_all, left_data_all, alternative="two.sided")
right_data <- right_data_all[right_data_all <= 2]
left_data <- left_data_all[left_data_all <= 2]
right_data <- right_data[right_data >= -1]
left_data <- left_data[left_data >= -1]
right_data <- right_data_all[right_data_all <= 2]
left_data <- left_data_all[left_data_all <= 2]
right_data <- right_data[right_data >= -1]
left_data <- left_data[left_data >= -1]
#install.package(“ggplot2”)
#install.packages('mixtools')
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data, left_data, alternative="two.sided")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_no_window_all_small_range.csv", header=TRUE)
right_data_all <- data[1:2972,2]
left_data_all <- data[2973:3439,2]
right_data <- right_data_all[right_data_all <= 2]
left_data <- left_data_all[left_data_all <= 2]
right_data <- right_data[right_data >= -1]
left_data <- left_data[left_data >= -1]
#install.package(“ggplot2”)
#install.packages('mixtools')
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data, left_data, alternative="two.sided")
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_20_window_all_small_range.csv", header=TRUE)
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_20_window_all_small_range.csv", header=TRUE)
View(data)
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_20_window_all_small_range.csv", header=TRUE)
right_data_all <- data[1:2955,2]
left_data_all <- data[2956:3321,2]
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data_all,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data_all,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data_all, left_data_all, alternative="two.sided")
right_data <- right_data_all[right_data_all <= 2]
left_data <- left_data_all[left_data_all <= 2]
right_data <- right_data[right_data >= -1]
left_data <- left_data[left_data >= -1]
data <- read.csv("/Users/reagan/Desktop/3UTRBERT_visualiztion/conservation_score/1000_conservation_20_window_all_small_range.csv", header=TRUE)
right_data_all <- data[1:2955,2]
left_data_all <- data[2956:3321,2]
right_data <- right_data_all[right_data_all <= 2]
left_data <- left_data_all[left_data_all <= 2]
right_data <- right_data[right_data >= -1]
left_data <- left_data[left_data >= -1]
#install.package(“ggplot2”)
#install.packages('mixtools')
library(ggplot2)
library(tidyverse)
library(mixtools)
theme_set(theme_classic())
p<-ggplot(data, aes(x = conservation_score))
p + geom_density(aes(color = left_or_right)) + xlim(-1,2)+
scale_color_manual(values=c("#999999", "#E69F00"), labels=c("left", "right")) + theme(legend.position=c(0.1,0.9))+
labs(title="Conservation Score Density Plot",x="Conservation scores", y = "Density", color='')+
theme(legend.text = element_text(size = 14))+ geom_vline(xintercept = mean(right_data,na.rm=TRUE), col = "#E69F00", lwd = 0.6, linetype="dashed")+
geom_vline(xintercept = mean(left_data,na.rm=TRUE), col = "#999999", lwd = 0.6, linetype="dashed")
ks.test(right_data_all, left_data_all, alternative="two.sided")
View(data)
